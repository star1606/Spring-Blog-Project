<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cos.springblog.repository.CommentRepository">


<select id="findByPostId" resultType="com.cos.springblog.dto.ReplyResponseDto">
<!-- <select id="findByPostId" resultType="com.cos.springblog.model.Comment"> -->
<!-- model.Comment를 하면 Comment의 필드들을 출력할 수 있지만 username을 출력할 수 없다. -->
	SELECT c.id, c.userId, c.postId, c.content, c.createDate, u.username
	FROM comment c INNER JOIN user u
	ON c.userId = u.id
	WHERE c.postId = #{postId}
	ORDER BY c.id DESC
	
<!-- 	join을 써서 출력하기 때문에 DTO 필요 -->
</select>

<!-- userID를 찾아서 저장하는 거 맞겠지? -->
<!-- id는 자동 저장-->
<!-- 그리고 이건 postId에 따른 위치를 봐라봐야함 WHERE절 필요하지 않나? -->
<insert id="save">
	INSERT INTO comment(userId, postId, content, createDate)
	VALUES (#{userId}, #{postId}, #{content}, now())
<!-- 	WHERE postId = #{postId}  이거 필요 없을 것 같음-->
</insert>

	
<!-- 	<insert id="save"> -->
<!-- 		INSERT INTO user(username, password, email, role, createDate)  -->
<!-- 		VALUES(#{username}, #{password}, #{email}, #{role}, now()) -->
<!-- 	</insert> -->
	
<!-- 	<select id="login" resultType="com.cos.springblog.model.User"> -->
<!-- 		SELECT id, username, email, profile, role, createDate FROM user WHERE username = #{username} AND password = #{password} -->
<!-- 	</select> -->
  

  
  
</mapper>